// ConsoleApplication7.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <vector>
#include <algorithm>
#include <iterator>

const std::string labyr[] = {
	"####B######################",
	"# #       #   #      #    #",
	"# # # ###### #### ####### #",
	"# # # #       #   #       #",
	"#   # # ######### # ##### #",
	"# # # #   #       #     # #",
	"### ### ### ############# #",
	"# #   #     # #           #",
	"# # #   ####### ###########",
	"# # # #       # #         C",
	"# # ##### ### # # ####### #",
	"# # #     ### # #       # #",
	"#   ##### ### # ######### #",
	"######### ### #           #",
	"# ####### ### #############",
	"A           #   ###   #   #",
	"# ############# ### # # # #",
	"# ###       # # ### # # # #",
	"# ######### # # ### # # # F",
	"#       ### # #     # # # #",
	"# ######### # ##### # # # #",
	"# #######   #       #   # #",
	"# ####### ######### #######",
	"#         #########       #",
	"#######E############D######"
};
void BFS(std::vector<std::pair<int, int>>& located, std::vector<char>& outs, int x_0, int y_0) {
	if (x_0 < 0 || x_0 >= labyr[0].length() || y_0 < 0 || y_0 >= std::size(labyr) || labyr[y_0][x_0] == '#') {
		return;
	}
	if (std::find(located.begin(), located.end(), std::make_pair(x_0, y_0)) != located.end()) {
		return;
	}
	located.push_back(std::make_pair(x_0, y_0));
	if (labyr[y_0][x_0] != ' ' && std::find(outs.begin(), outs.end(), labyr[y_0][x_0]) == outs.end()) {
		outs.push_back(labyr[y_0][x_0]);
	}
	BFS(located, outs, x_0 + 1, y_0);
	BFS(located, outs, x_0 - 1, y_0);
	BFS(located, outs, x_0, y_0 + 1);
	BFS(located, outs, x_0, y_0 - 1);
}
int main() {
	std::vector<std::pair<int, int>> located;
	std::vector<char> outs;
	int x_0, y_0;
	std::cin >> x_0 >> y_0;
	if (x_0 < 0 || x_0 >= labyr[0].length() || y_0 < 0 || y_0 >= std::size(labyr) || labyr[y_0][x_0] == '#') {
		std::cout << "Neverniye coordinati";
	}
	else {
		BFS(located, outs, x_0, y_0);
		if (outs.size() != 0) {
			for (char u : outs) {
				std::cout << u << " ";
			}
		}
		else {
			std::cout << "Vyhodov net";
		}   std::cout << std::endl;
	}

}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
